<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest>math.MyMathTest.inputZeroFactorial(math.MyMathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>math.MyMathTest.testFactorialForBoundaryValue12(math.MyMathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>29</index></indexes><blocks><block>5</block></blocks><killingTest>math.MyMathTest.factorial(math.MyMathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>34</index></indexes><blocks><block>6</block></blocks><killingTest>math.MyMathTest.factorial(math.MyMathTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest>math.MyMathTest.factorial(math.MyMathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest>math.MyMathTest.factorial(math.MyMathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>29</index></indexes><blocks><block>5</block></blocks><killingTest>math.MyMathTest.factorial(math.MyMathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest>math.MyMathTest.factorial(math.MyMathTest)</killingTest><description>replaced int return with 0 for math/MyMath::factorial</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest>math.ArrayOperationsTest.findPrimes(math.ArrayOperationsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>math.MyMathTest.isNotPrimeForSmallEvenNumber(math.MyMathTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>27</index></indexes><blocks><block>4</block></blocks><killingTest>math.MyMathTest.isPrime(math.MyMathTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>33</index></indexes><blocks><block>5</block></blocks><killingTest>math.MyMathTest.isNotPrimeForAnotherSmallEvenNumber(math.MyMathTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest>math.MyMathTest.isNotPrimeForAnotherSmallEvenNumber(math.MyMathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>math.MyMathTest.isNotPrimeForAnotherSmallEvenNumber(math.MyMathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>34</index></indexes><blocks><block>5</block></blocks><killingTest>math.MyMathTest.isNotPrimeForAnotherSmallEvenNumber(math.MyMathTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>8</block></blocks><killingTest>math.MyMathTest.isPrime(math.MyMathTest)</killingTest><description>replaced boolean return with false for math/MyMath::isPrime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MyMath.java</sourceFile><mutatedClass>math.MyMath</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>8</block></blocks><killingTest>math.MyMathTest.isNotPrimeForAnotherSmallEvenNumber(math.MyMathTest)</killingTest><description>replaced boolean return with true for math/MyMath::isPrime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTest>math.ArithmeticOperationsTest.divide(math.ArithmeticOperationsTest)</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest>math.ArithmeticOperationsTest.divide(math.ArithmeticOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTest>math.ArithmeticOperationsTest.divide(math.ArithmeticOperationsTest)</killingTest><description>replaced double return with 0.0d for math/ArithmeticOperations::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>math.ArithmeticOperationsTest.testMultiplyWithFirstNumberZero(math.ArithmeticOperationsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>math.ArithmeticOperationsTest.testMultiplyWithSecondNumberZero(math.ArithmeticOperationsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>31</index></indexes><blocks><block>6</block></blocks><killingTest>math.ArithmeticOperationsTest.testMultiplyProductEqualsMaxValue(math.ArithmeticOperationsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>30</index></indexes><blocks><block>6</block></blocks><killingTest>math.ArithmeticOperationsTest.multiply(math.ArithmeticOperationsTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>36</index></indexes><blocks><block>7</block></blocks><killingTest>math.ArithmeticOperationsTest.multiply(math.ArithmeticOperationsTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>math.ArithmeticOperationsTest.testFirstNumberIsNegative(math.ArithmeticOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>math.ArithmeticOperationsTest.testMultiplyWithSecondNumberZero(math.ArithmeticOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>19</index></indexes><blocks><block>4</block></blocks><killingTest>math.ArithmeticOperationsTest.testMultiplyWithSecondNumberZero(math.ArithmeticOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>31</index></indexes><blocks><block>6</block></blocks><killingTest>math.ArithmeticOperationsTest.multiply(math.ArithmeticOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArithmeticOperations.java</sourceFile><mutatedClass>math.ArithmeticOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>37</index></indexes><blocks><block>7</block></blocks><killingTest>math.ArithmeticOperationsTest.multiply(math.ArithmeticOperationsTest)</killingTest><description>replaced int return with 0 for math/ArithmeticOperations::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileIO.java</sourceFile><mutatedClass>io.FileIO</mutatedClass><mutatedMethod>lambda$readFile$0</mutatedMethod><methodDescription>(Ljava/lang/Integer;)I</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest>io.FileIOTest.readFile(io.FileIOTest)</killingTest><description>replaced int return with 0 for io/FileIO::lambda$readFile$0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileIO.java</sourceFile><mutatedClass>io.FileIO</mutatedClass><mutatedMethod>readFile</mutatedMethod><methodDescription>(Ljava/lang/String;)[I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest>io.FileIOTest.invalidEntry(io.FileIOTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileIO.java</sourceFile><mutatedClass>io.FileIO</mutatedClass><mutatedMethod>readFile</mutatedMethod><methodDescription>(Ljava/lang/String;)[I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>48</index></indexes><blocks><block>10</block></blocks><killingTest>io.FileIOTest.invalidEntry(io.FileIOTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileIO.java</sourceFile><mutatedClass>io.FileIO</mutatedClass><mutatedMethod>readFile</mutatedMethod><methodDescription>(Ljava/lang/String;)[I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>89</index></indexes><blocks><block>19</block></blocks><killingTest>io.FileIOTest.fileIsEmpty(io.FileIOTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileIO.java</sourceFile><mutatedClass>io.FileIO</mutatedClass><mutatedMethod>readFile</mutatedMethod><methodDescription>(Ljava/lang/String;)[I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>17</block></blocks><killingTest>io.FileIOTest.test_io_exception(io.FileIOTest)</killingTest><description>removed call to java/io/IOException::printStackTrace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileIO.java</sourceFile><mutatedClass>io.FileIO</mutatedClass><mutatedMethod>readFile</mutatedMethod><methodDescription>(Ljava/lang/String;)[I</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>105</index></indexes><blocks><block>25</block></blocks><killingTest>io.FileIOTest.readFile(io.FileIOTest)</killingTest><description>replaced return value with null for io/FileIO::readFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayOperations.java</sourceFile><mutatedClass>math.ArrayOperations</mutatedClass><mutatedMethod>findPrimesInFile</mutatedMethod><methodDescription>(Lio/FileIO;Ljava/lang/String;Lmath/MyMath;)[I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest>math.ArrayOperationsTest.findPrimes(math.ArrayOperationsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayOperations.java</sourceFile><mutatedClass>math.ArrayOperations</mutatedClass><mutatedMethod>findPrimesInFile</mutatedMethod><methodDescription>(Lio/FileIO;Ljava/lang/String;Lmath/MyMath;)[I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest>math.ArrayOperationsTest.findPrimes(math.ArrayOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayOperations.java</sourceFile><mutatedClass>math.ArrayOperations</mutatedClass><mutatedMethod>findPrimesInFile</mutatedMethod><methodDescription>(Lio/FileIO;Ljava/lang/String;Lmath/MyMath;)[I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest>math.ArrayOperationsTest.findPrimes(math.ArrayOperationsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayOperations.java</sourceFile><mutatedClass>math.ArrayOperations</mutatedClass><mutatedMethod>findPrimesInFile</mutatedMethod><methodDescription>(Lio/FileIO;Ljava/lang/String;Lmath/MyMath;)[I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>53</index></indexes><blocks><block>13</block></blocks><killingTest>math.ArrayOperationsTest.findPrimes(math.ArrayOperationsTest)</killingTest><description>replaced return value with null for math/ArrayOperations::findPrimesInFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArrayOperations.java</sourceFile><mutatedClass>math.ArrayOperations</mutatedClass><mutatedMethod>lambda$findPrimesInFile$0</mutatedMethod><methodDescription>(Ljava/lang/Integer;)I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest>math.ArrayOperationsTest.findPrimes(math.ArrayOperationsTest)</killingTest><description>replaced int return with 0 for math/ArrayOperations::lambda$findPrimesInFile$0</description></mutation>
</mutations>
